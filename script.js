// script.js document.addEventListener('DOMContentLoaded', () => { const loading = document.getElementById('loading'); const authContainer = document.getElementById('auth-container'); const dashboardContainer = document.getElementById('dashboard-container'); const message = document.getElementById('message'); const logoutBtn = document.getElementById('logout'); // Function to show message function showMessage(text, type = 'info') { message.textContent = text; message.className = `alert ${type}`; } // Auth state listener for session management auth.onAuthStateChanged(async (user) => { loading.style.display = 'none'; if (user) { if (!user.emailVerified) { showMessage('Please verify your email.', 'error'); auth.signOut(); return; } // Fetch user data from Firestore const userDoc = await db.collection('users').doc(user.uid).get(); const userData = userDoc.data(); if (window.location.pathname.includes('dashboard.html')) { dashboardContainer.style.display = 'block'; document.getElementById('user-name').textContent = userData.name || 'User'; document.getElementById('user-email').textContent = user.email; } else { authContainer.style.display = 'block'; logoutBtn.style.display = 'inline'; showMessage('You are logged in! Go to <a href="dashboard.html">Dashboard</a>.', 'success'); } } else { if (window.location.pathname.includes('dashboard.html')) { window.location.href = 'index.html'; // Redirect to login if not authenticated } else { authContainer.style.display = 'block'; logoutBtn.style.display = 'none'; } } }); // Sign Up document.getElementById('signup-form').addEventListener('submit', (e) => { e.preventDefault(); const name = document.getElementById('signup-name').value; const email = document.getElementById('signup-email').value; const password = document.getElementById('signup-password').value; auth.createUserWithEmailAndPassword(email, password) .then((userCredential) => { userCredential.user.sendEmailVerification(); // Store in Firestore db.collection('users').doc(userCredential.user.uid).set({ name: name, email: email, createdAt: firebase.firestore.FieldValue.serverTimestamp() }); showMessage('Sign up successful! Check your email for verification.', 'success'); }) .catch((error) => showMessage(error.message, 'error')); }); // Sign In document.getElementById('signin-form').addEventListener('submit', (e) => { e.preventDefault(); const email = document.getElementById('signin-email').value; const password = document.getElementById('signin-password').value; auth.signInWithEmailAndPassword(email, password) .then(() => showMessage('Sign in successful!', 'success')) .catch((error) => showMessage(error.message, 'error')); }); // Google Sign In document.getElementById('google-signin').addEventListener('click', () => { auth.signInWithPopup(googleProvider) .then((result) => { // Store in Firestore if new user const user = result.user; db.collection('users').doc(user.uid).set({ name: user.displayName, email: user.email, createdAt: firebase.firestore.FieldValue.serverTimestamp() }, { merge: true }); showMessage('Google sign in successful!', 'success'); }) .catch((error) => showMessage(error.message, 'error')); }); // Password Reset document.getElementById('reset-form').addEventListener('submit', (e) => { e.preventDefault(); const email = document.getElementById('reset-email').value; auth.sendPasswordResetEmail(email) .then(() => showMessage('Password reset email sent!', 'success')) .catch((error) => showMessage(error.message, 'error')); }); // Logout logoutBtn.addEventListener('click', () => { auth.signOut().then(() => showMessage('Logged out.', 'info')); }); });